
Allocating common symbols
Common symbol       size              file

pgd                 0x4               page.o
scancode_work       0xc               key.o
cursor_col          0x4               vga.o
vga_buffer          0x4               vga.o
keyb_buffer         0x420             key.o
cursor_row          0x4               vga.o
info_work           0xc               time.o
f0                  0x4               key.o
interrupt           0x174             intr.o
io_key_data         0x4               key.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x3000
LOAD start.o
LOAD arch.o
LOAD page.o
LOAD init.o
LOAD except.o
LOAD exint.o
LOAD intr.o
LOAD vga.o
LOAD time.o
LOAD key.o
LOAD lock.o
LOAD print.o
LOAD tool.o
                0x0000000080020000                .=0x80020000

.interp
 *(.interp)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.sdata
 *(.rel.sdata)
 *(.rel.sdata1)
 *(.rel.sdata.*)
 *(.rel.gnu.linkonce.s*)

.rela.sdata
 *(.rela.sdata)
 *(.rela.sdata1)
 *(.rela.sdata.*)
 *(.rela.gnu.linkonce.s*)

.rel.sbss
 *(.rel.sbss)

.rela.sbss
 *(.rela.sbss)

.rel.sdata2
 *(.rel.sdata2)

.rela.sdata2
 *(.rela.sdata2)

.rel.sbss2
 *(.rel.sbss2)

.rela.sbss2
 *(.rela.sbss2)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.plt
 *(.plt)

.text           0x0000000000003000     0x323c
                0x0000000000003000                _ftext=.
 *(.text)
 .text          0x0000000000003000       0x1c start.o
                0x0000000000003000                start
 .text          0x000000000000301c       0x6c arch.o
                0x0000000000003064                get_cpu_hz
                0x0000000000003040                get_sd_size
                0x000000000000301c                get_phymm_size
 .text          0x0000000000003088      0x4f4 page.o
                0x0000000000003088                init_pgtable
                0x00000000000032f4                disable_paging
                0x00000000000032b4                enable_paging
                0x000000000000345c                set_pt_entry
                0x000000000000333c                set_pgd_entry
 .text          0x000000000000357c       0xf4 init.o
                0x0000000000003608                init_kernel
                0x000000000000357c                machine_info
 .text          0x0000000000003670      0x508 except.o
                0x0000000000003670                do_ri
                0x0000000000003ae8                do_exception
 .text          0x0000000000003b78      0x150 exint.o
                0x0000000000003cc4                _end_ex
                0x0000000000003b78                _exint_handler
 .text          0x0000000000003cc8      0x844 intr.o
                0x000000000000401c                set_timer
                0x000000000000405c                get_ier
                0x00000000000040bc                get_icr
                0x0000000000004130                register_handler
                0x0000000000003fec                get_timer
                0x00000000000041e8                unregister_handler
                0x0000000000003f90                disable_intr
                0x0000000000003f3c                enable_intr
                0x0000000000004348                unregister_work
                0x000000000000428c                register_work
                0x0000000000003cc8                init_exint
                0x000000000000408c                set_ier
                0x0000000000003dcc                do_interrupt
                0x00000000000040ec                clean_icr
 .text          0x000000000000450c      0x6f8 vga.o
                0x000000000000450c                init_vga
                0x0000000000004620                clean_screen
                0x0000000000004708                set_cursor
                0x0000000000004780                scroll_screen
                0x00000000000048dc                put_char_ex
                0x00000000000049d4                put_char
 .text          0x0000000000004c04      0x75c time.o
                0x0000000000004c04                timer_handler
                0x0000000000005078                init_systime
                0x00000000000050e0                init_time
                0x00000000000051ec                flush_systime
 .text          0x0000000000005360      0x4ec key.o
                0x0000000000005360                keyb_handler
                0x0000000000005560                get_scancode
                0x0000000000005714                get_ch
                0x000000000000543c                init_keyboard
 .text          0x000000000000584c      0x178 lock.o
                0x000000000000589c                lockup
                0x0000000000005914                unlock
                0x000000000000584c                init_lock
 .text          0x00000000000059c4      0x4d8 print.o
                0x0000000000005c58                print_char
                0x0000000000005cac                print_str
                0x0000000000005d44                print_binary
                0x00000000000059c4                printk
                0x0000000000005df0                print_hex
 .text          0x0000000000005e9c      0x3a0 tool.o
                0x0000000000005e9c                memcpy
                0x000000000000606c                multiply
                0x0000000000006020                mkshort
                0x0000000000005fd8                mkint
                0x0000000000005f4c                memset
                0x000000000000615c                highest_set
                0x00000000000061cc                lowest_set
                0x00000000000060e0                division
 *(.text.*)
 *(.stub)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000000000623c                _ecode=.

.init
 *(.init)

.fini
 *(.fini)

.rodata         0x0000000000006240      0x3c8
 *(.rodata)
 .rodata        0x0000000000006240       0x58 init.o
 .rodata        0x0000000000006298       0xe7 intr.o
 *fill*         0x000000000000637f 0xe700000001
 .rodata        0x0000000000006380       0x55 vga.o
 *fill*         0x00000000000063d5 0x5500000003
 .rodata        0x00000000000063d8       0x82 time.o
 *fill*         0x000000000000645a 0x8200000002
 .rodata        0x000000000000645c       0x3b key.o
 *fill*         0x0000000000006497 0x3b00000001
 .rodata        0x0000000000006498      0x170 print.o
 *(.rodata.*)
 *(.gnu.linkonce.r*)

.rodata1
 *(.rodata1)

.sdata2
 *(.sdata2)

.sbss2
 *(.sbss2)

.sdeinit
 *(.sdeinit)

.sdefini
 *(.sdefini)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table)

.ctors
 *crt0.o(.ctors)
 *crtbegin.o(.ctors)
 *crtbeginS.o(.ctors)
 EXCLUDE_FILE ( *crtn.o, *crtendS.o, *crtend.o)*(.ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crt0.o(.dtors)
 *crtbegin.o(.dtors)
 *crtbeginS.o(.dtors)
 EXCLUDE_FILE ( *crtn.o, *crtendS.o, *crtend.o)*(.dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.dynamic
 *(.dynamic)

.dynsym
 *(.dynsym)

.hash
 *(.hash)

.dynstr
 *(.dynstr)
                0x0000000000006608                __etext=.
                0x0000000000006608                _etext=.
                0x0000000000006608                PROVIDE (etext, .)
                0x0000000000006608                .=ALIGN(0x8)

.data           0x0000000000006608       0x70
                0x0000000000006608                _fdata=.
 *(.data)
 .data          0x0000000000006608       0x70 key.o
                0x0000000000006608                keymap
 *(.data.*)
 *(.gnu.linkonce.d*)

.data1
 *(.data1)
                0x000000000000e670                _gp=(ALIGN(0x10)+0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x0000000000006678        0x4
 *(.sdata)
 .sdata         0x0000000000006678        0x4 print.o
                0x0000000000006678                imap
 *(.sdata1)
 *(.sdata.*)
 *(.gnu.linkonce.s.*)

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x0000000000006680                .=ALIGN(0x8)
                0x000000000000667c                _edata=.
                0x000000000000667c                PROVIDE (edata, .)
                0x000000000000667c                __bss_start=.
                0x000000000000667c                PROVIDE (__edata, .)
                0x000000000000667c                _fbss=.

.sbss           0x0000000000006680       0x50
                0x0000000000006680                __sbss_start=.
                0x0000000000006680                ___sbss_start=.
 *(.dynsbss)
 *(.sbss)
 .sbss          0x0000000000006680       0x10 vga.o
 .sbss          0x0000000000006690       0x24 time.o
 .sbss          0x00000000000066b4        0x4 key.o
 *(.sbss.*)
 *(.scommon)
 .scommon       0x00000000000066b8        0x4 page.o
                                          0x0 (size before relaxing)
                0x00000000000066b8                pgd
 .scommon       0x00000000000066bc        0xc vga.o
                                          0x0 (size before relaxing)
                0x00000000000066bc                cursor_col
                0x00000000000066c0                vga_buffer
                0x00000000000066c4                cursor_row
 .scommon       0x00000000000066c8        0x8 key.o
                                          0x0 (size before relaxing)
                0x00000000000066c8                f0
                0x00000000000066cc                io_key_data
                0x00000000000066d0                __sbss_end=.
                0x00000000000066d0                ___sbss_end=.

.bss            0x00000000000066d0      0x5ac
 *(.dynbss)
 *(.bss)
 *(.bss.*)
 *(COMMON)
 COMMON         0x00000000000066d0      0x174 intr.o
                                          0x0 (size before relaxing)
                0x00000000000066d0                interrupt
 COMMON         0x0000000000006844        0xc time.o
                                          0x0 (size before relaxing)
                0x0000000000006844                info_work
 COMMON         0x0000000000006850      0x42c key.o
                                          0x0 (size before relaxing)
                0x0000000000006850                scancode_work
                0x000000000000685c                keyb_buffer
                0x0000000000006c7c                .=ALIGN(0x4)
                0x0000000000006c7c                .=ALIGN(0x4)
                0x0000000000006c7c                _end=.
                0x0000000000006c7c                PROVIDE (__end, .)
                0x0000000000006c7c                PROVIDE (end, .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x160
 *(.comment)
 .comment       0x0000000000000000       0x20 arch.o
 .comment       0x0000000000000020       0x20 page.o
 .comment       0x0000000000000040       0x20 init.o
 .comment       0x0000000000000060       0x20 except.o
 .comment       0x0000000000000080       0x20 intr.o
 .comment       0x00000000000000a0       0x20 vga.o
 .comment       0x00000000000000c0       0x20 time.o
 .comment       0x00000000000000e0       0x20 key.o
 .comment       0x0000000000000100       0x20 lock.o
 .comment       0x0000000000000120       0x20 print.o
 .comment       0x0000000000000140       0x20 tool.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.reginfo)

.gptab.sdata
 *(.gptab.data)
 *(.gptab.sdata)

.gptab.sbss
 *(.gptab.bss)
 *(.gptab.sbss)

.pdr            0x0000000000000000      0x8c0
 *(.pdr)
 .pdr           0x0000000000000000       0x60 arch.o
 .pdr           0x0000000000000060       0xa0 page.o
 .pdr           0x0000000000000100       0x40 init.o
 .pdr           0x0000000000000140       0x40 except.o
 .pdr           0x0000000000000180      0x280 intr.o
 .pdr           0x0000000000000400       0xc0 vga.o
 .pdr           0x00000000000004c0      0x120 time.o
 .pdr           0x00000000000005e0       0xc0 key.o
 .pdr           0x00000000000006a0       0x80 lock.o
 .pdr           0x0000000000000720       0xa0 print.o
 .pdr           0x00000000000007c0      0x100 tool.o
OUTPUT(kernel.elf elf32-littlemips)
